ACLS:CLS
DIM SINTBL[360]
DIM COSTBL[360]
DIM ENEMYSET[50,2]
DIM PATHDATA[50,2]
DIM RINGBUF[100,2]
GOSUB @INIT
@MAIN
CLS
SPOFS 1 OUT X,Y
A=BUTTON(0,-1,0)
IF (A AND BTNBIT_LLEFT)!=0 THEN X=X-1
IF (A AND BTNBIT_LRIGHT)!=0 THEN X=X+1
IF (A AND BTNBIT_LUP)!=0 THEN Y=Y-1
IF (A AND BTNBIT_LDOWN)!=0 THEN Y=Y+1
IF (A AND BTNBIT_RRIGHT)!=0 THEN GOSUB @SHOTSET
SPVAR 1,"X",X
SPVAR 1,"Y",Y
SPOFS 1,SPVAR(1,"X"),SPVAR(1,"Y")
GOSUB @ENEMYSET
GOSUB @CHRMOVE
TOFS 0,0,SCR
SCR=SCR+0.3
TIME=INT(SCR)+2160
IF TIME>ENEMYSET[ES_PT,0] THEN ES_PT=ES_PT+1
VSYNC
GOTO @MAIN
@INIT
SPSET 1,0
SPHOME 1,8,8
SPVAR 1."X",50
SPVAR 1,"Y",50
SPOFS 1,SPVAR(1,"X"),SPVAR(1,"Y")
BTNBIT_LLEFT = 1 << #B_LLEFT
BTNBIT_LRIGHT = 1 << #B_LRIGHT
BTNBIT_LUP = 1 << #B_LUP
BTNBIT_LDOWN = 1 << #B_LDOWN
BTNBIT_RRIGHT = 1 << #B_RRIGHT

FOR I=0 TO 359
SINTBL[I]=SIN(RAD(I))
COSTBL[I]=COS(RAD(I))
NEXT
LOADG"GAZO",4
TSCREEN 0,16,16,30,150
THOME 0,0,0
RESTORE @STAGEDATA
FOR I=0 TO 149
READ A$
FOR J=0 TO 14
B$=MID$(A$,J,1)
B$="&H"+B$
TPUT 0,J,I,&HE800+VAL(B$)
NEXT
NEXT
RESTORE @ENEMYDATA
FOR I=0 TO 49
READ ENEMYSET[I,0],ENEMYSET[I,1]
NEXT
RESTORE @PATHDATA
FOR I=0 TO 49
READ PATHDATA[I,0],PATHDATA[I,1]
IF PATHDATA[I,0]==999 THEN BREAK
NEXT
SCR=-2160
ES_PT=0
TFLAG=0'FOR FORMATION TEST
RETURN
@SHOTSET
S=SPSET(10,19,4)
IF S==-1 THEN RETURN
SPHOME S,8,8
SPVAR S,"ANGLE",90
SPVAR S,"SPEED",16
SPOFS S,X,Y
SPCOL S,1
S=SPSET(20,29,5)
IF S==-1 THEN RETURN
SPHOME S,8,8
SPROT S,20
SPVAR S,"ANGLE",70
SPVAR S,"SPEED",16
SPOFS S,X,Y
SPCOL S,1
RETURN
@CHRMOVE
IF SPUSED(2)==0 THEN RETURN
SPOFS 2 OUT TX,TY
ANGLE=SPVAR(2,"ANGLE")
COUNT=SPVAR(2,"COUNT")
RCOUNT=SPVAR(2,"RCOUNT")
TX=TX+COSTBL[ANGLE]*2:TY=TY+(-SINTBL[ANGLE])*2
SPOFS 2,TX,TY
RINGBUF[RCOUNT,0]=TX
RINGBUF[RCOUNT,1]=TY
FOR I=0 TO 7
TMPC=RCOUNT-(I+1)*10+100
TMPC=TMPC MOD 100
SPOFS I+100,RINGBUF[TMPC,0],RINGBUF[TMPC,1]
NEXT
RCOUNT=RCOUNT+1
RCOUNT=RCOUNT MOD 100
COUNT=COUNT-1
IF COUNT<=0 THEN I=2:GOSUB @POINTSET
SPVAR 2,"COUNT",COUNT
SPVAR 2,"RCOUNT",RCOUNT
RETURN
@POINTSET
POINT=SPVAR(I,"POINT")
POINT=POINT+1
X2=PATHDATA[POINT,0]
Y2=PATHDATA[POINT,1]
IF X2==999 THEN GOSUB @FORMATIONCLR:RETURN
AX=X2-TX:AY=Y2-TY
ANGLE=DEG(ATAN(-AY,AX))
ANGLE=(ANGLE+360) MOD 360
DISTANCE=SQR(POW(AX,2)+POW(AY,2))'2は1フレームごとの移動距離。今は暫定で定数
COUNT=INT(DISTANCE/2)'2は1フレームごとの移動距離。今は暫定で定数
SPVAR I,"POINT",POINT
SPVAR I,"ANGLE",ANGLE
SPVAR I,"COUNT",COUNT
RETURN
@FORMATIONCLR
SPCLR 2
FOR I=100 TO 107
SPCLR I
NEXT
FFLG=999
RETURN
@SHOTHIT
SPCLR H;SPCLR I
S=SPSET(80,99,3428)
SPHOME S,8,8
SPOFS S,TX,TY
SPANIM S,"I.",3,6,3,7,3,8,3,9,3,10
RETURN
@ENEMYSET
IF TFLAG==1 THEN RETURN
SPSET 2,13
X1=PATHDATA[0,0]:Y1=PATHDATA[0,1]
X2=PATHDATA[1,0]:Y2=PATHDATA[1,1]
AX=X2-X1:AY=Y2-Y1
ANGLE=DEG(ATAN(-AY,AX))
DISTANCE=SQR(POW(AX,2)+POW(AY,2))
COUNT=INT(DISTANCE/2)
SPOFS 2,X1,Y1
SPVAR 2,"COUNT",COUNT
SPVAR 2,"ANGLE",ANGLE
SPVAR 2,"SPEED",2
SPVAR 2,"POINT",1
SPVAR 2,"RCOUNT",1
FOR I=0 TO 99
RINGBUF[I,0]=X1:RINGBUF[I,1]=Y1
NEXT
FOR I=0 TO 7
SPSET 100+I,32
SPOFS 100+I,X1,Y1
NEXT
TFLAG=1
RETURN
@ENEMYSET_1
S=SPSET(40,79,32)
IF S==-1 THEN RETURN
SPVAR S,"ANGLE",270
SPVAR S,"SPEED",4
SPOFS S,RND(200),0
SPCOL S,1
RETURN
@ENEMYSET_2
S=SPSET(40,79,33)
IF S==-1 THEN RETURN
SPVAR S,"ANGLE",270
SPVAR S,"SPEED",4
SPOFS S,RND(200),0
SPCOL S,1
RETURN
@PATHDATA
DATA -20,144
DATA 16,144
DATA 42,140
DATA 65,131
DATA 82,116
DATA 90,93
DATA 90,71
DATA 81,52
DATA 63,43
DATA 44,48
DATA 29,57
DATA 24,80
DATA 24,80
DATA 32,100
DATA 53,115
DATA 88,132
DATA 119,138
DATA 162,146
DATA 187,141
DATA 203,133
DATA 212,119
DATA 215,99
DATA 214,54
DATA 198,31
DATA 182,30
DATA 160,38
DATA 149,61
DATA 149,250
DATA -16,250
DATA 999,999
@STAGEDATA
DATA "044444ABA455555"
DATA "4444444BA455555"
DATA "444657444485555"
DATA "444555444444444"
DATA "44455944AB44044"
DATA "444854444444444"
DATA "444444440444444"
DATA "574444444444444"
DATA "5574BB446557444"
DATA "2D544B46C1D5744"
DATA "12544445222D544"
DATA "3F944448E13F544"
DATA "594444448555944"
DATA "444444444444444"
DATA "444444444BBB444"
REM ------------------1
            :
※以下、10(10画面分)続きます
            :
@ENEMYDATA
DATA 240,1
DATA 300,0
DATA 540,2
DATA 600,0
DATA 860,1
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
DATA 9999,0
